Application startup can take a bit, follow the logs with:
  kubectl logs -f deployment/{{ include "business-central.fullname" . }}

Get the application URL by running these commands:
{{- if (first .Values.ingress).name }}
{{- range $host := (first .Values.ingress).hosts }}
  http{{ if (first $.Values.ingress).tls }}s{{ end }}://{{ $host.host }}{{ $host.path | default "/" }}/BC
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "business-central.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT/BC
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "business-central.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "business-central.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP/BC
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "business-central.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080/BC to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:80
{{- end }}

{{- if and (not .Values.password) (not .Values.securePassword)}}

You can get the generated password via:
  Bash:
    kubectl get secret/{{ include "business-central.fullname" . }} --template="{{ "{{.data.password}}" }}" | base64 -D
  PowerShell:
    $PW=$(kubectl get secret/{{ include "business-central.fullname" . }} --template="{{ "{{.data.password}}" }}")
    [System.Text.Encoding]::UTF8.GetString([System.Convert]::FromBase64String($PW))
{{- end }}